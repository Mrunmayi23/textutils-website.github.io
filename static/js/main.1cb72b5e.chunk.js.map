{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","role","id","onClick","toggleMode","htmlFor","data-bs-toggle","data-bs-target","aria-controls","aria-label","tabindex","aria-labelledby","data-bs-dismiss","aria-current","abouttext","aria-expanded","placeholder","Textform","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","margin","head","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","newtext1","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","split","length","About","myStyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","data-bs-parent","border","class","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.1cb72b5e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-${props.mode} bg-${props.mode} fixed-top`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n\r\n{/* switch for darkkkkk mode */}\r\n<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n<input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n<label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n</div>\r\n\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasDarkNavbar\" aria-controls=\"offcanvasDarkNavbar\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"offcanvas offcanvas-end text-bg-dark\" tabindex=\"-1\" id=\"offcanvasDarkNavbar\" aria-labelledby=\"offcanvasDarkNavbarLabel\">\r\n      <div className=\"offcanvas-header\">\r\n        <h5 className=\"offcanvas-title\" id=\"offcanvasDarkNavbarLabel\">Text Utils</h5>\r\n        <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n      </div>\r\n  \r\n      <div className=\"offcanvas-body\">\r\n        <ul className=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.abouttext}</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu dropdown-menu-dark\">\r\n              <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n              <li>\r\n                <hr className=\"dropdown-divider\"/>\r\n              </li>\r\n              <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex mt-3\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    abouttext : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    abouttext: 'About text here'\r\n};\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n//Hooks  !!!!!!!\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked\" + text);\r\n        let newText =  text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Converted to Upper case\", \"success\");\r\n    }\r\n    const handleonChange = (event)=>{\r\n        console.log(\"on Change\");\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    const handleDownClick = (event)=>{\r\n        console.log(\"Lowercase was clicked\" + text);\r\n        let newtext1 = text.toLowerCase();\r\n        setText(newtext1);\r\n        props.showAlert(\" Converted to lower case\", \"success\");\r\n    }\r\n    const handleClearClick = (event)=>{\r\n        \r\n        let newtext = \"\";\r\n        setText(newtext)\r\n        props.showAlert(\" Text Cleared\", \"success\");\r\n    }\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n    \r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\" Copied to clipboard\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    \r\n  return (\r\n    <>\r\n<div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}} > \r\n<h1 style={{ margin:\"3rem\"}}>{props.head}</h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange ={handleonChange} style={{backgroundColor:props.mode==='dark'?'#042743':'white', color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to uppercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleDownClick} >Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleClearClick} >Clear </button>\r\n<button type=\"submit\" onClick={speak} className=\"btn btn-primary mx-2 my-2\">Speak</button>\r\n<button className=\"btn btn-primary mx-2\" id = \"myBox\" onClick={handleCopy} >Copy </button>\r\n</div>\r\n<div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}} >\r\n    <h2>Your text summary</h2>\r\n    <p>{text.split(\" \").length } words and {text.length} characters</p>\r\n    <p>{0.008* text.split(\" \").length} Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something  in checkbox\"}</p>\r\n</div>\r\n</>\r\n  )\r\n}\r\n\r\nTextform.propTypes = {\r\n    head : PropTypes.string.isRequired\r\n    \r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function About() {\r\nconst [myStyle, setMyStyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n})\r\nconst [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\nconst toggleStyle = ()=>{\r\n    if(myStyle.color === 'black'){\r\n        setMyStyle({\r\n\r\n            color: 'white',\r\n            backgroundColor: 'black',\r\n            border: '1px solid white'\r\n        })\r\n        setBtnText(\"Enable Light Mode\")\r\n    }\r\n    else{\r\n        setMyStyle({\r\n            color: 'black',\r\n            backgroundColor: 'white'\r\n            \r\n        })\r\n        setBtnText(\"Enable Dark Mode\")\r\n    }\r\n}\r\n    \r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n        <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n      <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container\">\r\n<button type=\"button\" onClick = {toggleStyle}   class=\"btn btn-primary my-3\">{btntext}</button>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" style={{ margin:\"3rem\"}}>\r\n    <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] =  useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg: message,\n      type: type \n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\" Dark mode has been enabled\", \"success\" );\n      // blinking title!!!!!\n      // setInterval(() => {\n      //   document.title = 'textutils is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'new features';\n      // }, 1500);\n\n\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Light mode has been enabled\", \"success\" );\n    }\n\n  }\n  \n  return (\n    <>\n     <Navbar title=\"Textutils\" abouttext = \"About Textutils\" mode ={mode} toggleMode={toggleMode}/>\n     <Alert alert={alert}></Alert>\n     <div className=\"container\">\n      <Textform showAlert={showAlert} head=\" Enter the text to analyze\" mode ={mode} />\n      </div>\n      <div>\n      <About/>\n      </div>\n      \n      \n     \n  </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}